#pragma once
#include "headfile.h"
int** Gameboard_setup_in();
int** game_board_in_init();
int** game_board_out_init();
int MineNumber(int** s, int row, int col);
void Gameboard_init(int** arr);
//-------------------------------------------------------------------------------------------------------------------
// 函数简介     游戏初识化的主函数
// 参数说明     
// 返回参数     返回创建好的游戏盘的主地址
// 使用示例     
// 备注信息		只是游戏内盘，外盘额外创建
//-------------------------------------------------------------------------------------------------------------------
int** game_board_in_init()
{
	int modle = 0;
	Game_state = Game_In_progress;
	
	int** s;
	scanf("%d",&modle);
	if (modle == 1)
	{
		Col = 9;
		Row = 9;
	}
	s = Gameboard_setup_in();
	Gameboard_input(s);
	Gameboard_init(s);
	return s;
}
//-------------------------------------------------------------------------------------------------------------------
// 函数简介     游戏盘的建立
// 参数说明     无
// 返回参数     二维动态数组的头地址
// 使用示例     
// 备注信息		内部调用
//-------------------------------------------------------------------------------------------------------------------
int** Gameboard_setup_in()
{
	int** arr;
	int i = 0;
	arr = (int**)malloc(sizeof(int*) * Row+2);
	for (; i <Row+2; i++)
	{
		arr[i] = (int*)malloc(sizeof(int)*(Col+2));
	}
	return arr;
}
//-------------------------------------------------------------------------------------------------------------------
// 函数简介     内盘初识化
// 参数说明     arr-内盘数组指针
// 返回参数     无
// 使用示例     
// 备注信息		内部调用
//-------------------------------------------------------------------------------------------------------------------
void Gameboard_init(int** arr)
{
	int i, j;
	for (i = 1; i < Row + 1; i++)
	{
		for (j = 1; j < Col + 1; j++)
		{
			if (arr[i][j] != 9)
			{
				arr[i][j] = MineNumber(arr,i,j);
			}
		}
	}
}
//-------------------------------------------------------------------------------------------------------------------
// 函数简介     单元格雷数统计
// 参数说明     s-内盘头地址，row，行数，col，列数
// 返回参数     该格8邻域内的雷数
// 使用示例     
// 备注信息		内部调用
//-------------------------------------------------------------------------------------------------------------------
int MineNumber(int**s,int row,int col)
{
	int number = 0;
	if (s[row - 1][col - 1] == 9)
	{
		number++;
	}
	if (s[row - 1][col] == 9)
	{
		number++;
	}
	if (s[row - 1][col + 1] == 9)
	{
		number++;
	}
	if (s[row][col - 1] == 9)
	{
		number++;
	}
	if (s[row][col + 1] == 9)
	{
		number++;
	}
	if (s[row + 1][col - 1] == 9)
	{
		number++;
	}
	if (s[row + 1][col] == 9)
	{
		number++;
	}
	if (s[row + 1][col + 1] == 9)
	{
		number++;
	}
	return number;
}

//-------------------------------------------------------------------------------------------------------------------
// 函数简介     游戏外盘的建立
// 参数说明     无
// 返回参数     二维动态数组的头地址
// 使用示例     
// 备注信息		内部调用
//-------------------------------------------------------------------------------------------------------------------
int** game_board_out_init()
{
	int** arr;
	arr = Gameboard_setup_in();
	int i, j;
	for (i = 0; i < Row + 2; i++)
	{
		for (j = 0; j < Col + 2; j++)
		{
			arr[i][j] = 1;
		}
	}
	return arr;
}